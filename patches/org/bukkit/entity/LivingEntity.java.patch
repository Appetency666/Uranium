--- ../src-base/minecraft/org/bukkit/entity/LivingEntity.java
+++ ../src-work/minecraft/org/bukkit/entity/LivingEntity.java
@@ -73,6 +73,22 @@
      */
     public List<Block> getLineOfSight(Set<Material> transparent, int maxDistance);
     /**
+     * Gets all blocks along the living entity's line of sight.
+     * <p>
+     * This list contains all blocks from the living entity's eye position to
+     * target inclusive.
+     *
+     * @param transparent HashSet containing all transparent block IDs (set to
+     *     null for only air)
+     * @param maxDistance this is the maximum distance to scan (may be limited
+     *     by server by at least 100 blocks, no less)
+     * @return list containing all blocks along the living entity's line of
+     *     sight
+     * @deprecated Magic value
+     */
+    @Deprecated
+    public List<Block> getLineOfSight(Set<Material> transparent, int maxDistance);
+    /**
      * Gets the block that the living entity has targeted.
      *
      * @param transparent HashSet containing all transparent block IDs (set to
@@ -84,8 +100,17 @@
      */
     @Deprecated
     public Block getTargetBlock(HashSet<Byte> transparent, int maxDistance);
-
     /**
+     * Gets the block that the living entity has targeted.
+     *
+     * @param transparent HashSet containing all transparent block Materials (set to
+     *     null for only air)
+     * @param maxDistance this is the maximum distance to scan (may be limited
+     *     by server by at least 100 blocks, no less)
+     * @return block that the living entity has targeted
+     */
+    public Block getTargetBlock(Set<Material> transparent, int maxDistance);
+    /**
      * Gets the last two blocks along the living entity's line of sight.
      * <p>
      * The target block will be the last block in the list.
@@ -337,51 +347,6 @@
     public boolean getCanPickupItems();
 
     /**
-     * Sets a custom name on a mob. This name will be used in death messages
-     * and can be sent to the client as a nameplate over the mob.
-     * <p>
-     * Setting the name to null or an empty string will clear it.
-     * <p>
-     * This value has no effect on players, they will always use their real
-     * name.
-     *
-     * @param name the name to set
-     */
-    public void setCustomName(String name);
-
-    /**
-     * Gets the custom name on a mob. If there is no name this method will
-     * return null.
-     * <p>
-     * This value has no effect on players, they will always use their real
-     * name.
-     *
-     * @return name of the mob or null
-     */
-    public String getCustomName();
-
-    /**
-     * Sets whether or not to display the mob's custom name client side. The
-     * name will be displayed above the mob similarly to a player.
-     * <p>
-     * This value has no effect on players, they will always display their
-     * name.
-     *
-     * @param flag custom name or not
-     */
-    public void setCustomNameVisible(boolean flag);
-
-    /**
-     * Gets whether or not the mob's custom name is displayed client side.
-     * <p>
-     * This value has no effect on players, they will always display their
-     * name.
-     *
-     * @return if the custom name is displayed
-     */
-    public boolean isCustomNameVisible();
-
-    /**
      * Returns whether the entity is currently leashed.
      *
      * @return whether the entity is leashed
